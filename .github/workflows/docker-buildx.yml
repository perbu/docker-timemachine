name: buildx

on:
  pull_request:
    branches: master
  push:
    branches: master
    tags:

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Prepare
        id: prepare
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
          elif [[ $GITHUB_REF == refs/heads/master ]]; then
            echo ::set-output name=version::latest
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            echo ::set-output name=version::${GITHUB_REF#refs/heads/}
          else
            echo ::set-output name=version::snapshot
          fi
          echo ::set-output name=docker_platforms::linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/386
          echo ::set-output name=docker_image::${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}
      - 
        name: Environment
        run: |
          echo git_ref=$GITHUB_REF
          echo version=${{ steps.prepare.outputs.version }}
          echo image=${{ steps.prepare.outputs.docker_image }}
          echo platforms=${{ steps.prepare.outputs.docker_platforms }}
          echo avail_platforms=${{ steps.buildx.outputs.platforms }}
  
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest
          qemu-version: latest
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - 
        name: Docker Login
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin        
      -
        name: Run Buildx
        run: |
          docker buildx build \
            --platform ${{ steps.prepare.outputs.docker_platforms }}\
            --output "type=image,push=true" \
            --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}" \
            --file Dockerfile.smb .